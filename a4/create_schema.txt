-- create_schema.txt
-- CSC 370 - Spring 2018
--
--
-- Dylan Dvorachek
-- V00863468

rollback;

drop table if exists grades;
drop table if exists enrollment;
drop table if exists course_offering;
drop table if exists students;
drop table if exists courses;




create table students(
    student_name varchar(255),
    student_id varchar(9),
    
    primary key(student_id),
    
    check(length(student_id) = 9),
    check(length(student_name) > 0 and length(student_name) < 256)
    );

create table courses(
    course_code varchar(10),
    
    primary key(course_code),
    
    check(length(course_code) <= 10)
    );

create table course_offering(
    course_code varchar(10),
    course_name varchar(128),
    term_code varchar(6),
    capacity integer,
    instructor_name varchar(255),
    
    primary key(course_name, term_code),
    foreign key(course_code) references courses(course_code),
    
    check(length(course_name) >= 1),
    check(length(term_code) = 6),
    check(capacity >= 0),
    check(length(instructor_name) > 0)
    );

create table enrollment(
    student_id varchar(9),
    course_name varchar(128),
    course_term varchar(6),
    
    primary key(course_name, course_term),
    foreign key(student_id) references students(student_id),
    foreign key(course_name, course_term) references course_offering(course_name, course_term)
    
    --check capacity
    );

create table grades(
    student_id varchar(9),
    course_name varchar(128), --
    term_code varchar(6),  --
    grade int,
    
    primary key(student_id, course_name, term_code),
    foreign key(student_id, course_name, term_code) references enrollment(student_id, course_name, term_code), --
    
    check(grade <= 100 and grade >=0)
    );



    
-- course prerequisite code taken from..
-- B. Bird - 02/28/2018
-- ..and modified

drop table if exists prerequisites;

create table prerequisites( course_code varchar(10), 
							prereq_code varchar(10), 
							primary key(course_code,
										prereq_code));

insert into prerequisites values ('CSC 115', 'CSC 110');
insert into prerequisites values ('CSC 116', 'CSC 111');
insert into prerequisites values ('CSC 225', 'CSC 115');
insert into prerequisites values ('CSC 226', 'CSC 225');
insert into prerequisites values ('CSC 230', 'CSC 115');
insert into prerequisites values ('SENG 265', 'CSC 115');
insert into prerequisites values ('CSC 330', 'CSC 226');
insert into prerequisites values ('CSC 330', 'CSC 230');
insert into prerequisites values ('CSC 330', 'SENG 265');
insert into prerequisites values ('CSC 370', 'CSC 226');
insert into prerequisites values ('CSC 370', 'SENG 265');
insert into prerequisites values ('SENG 474', 'SENG 265');

select * from prerequisites;


with
  prereqs as (select * from prerequisites),
  prereqs2 as (select * from prerequisites
  			   union
  			   select P1.course_code,  P2.prereq_code
  			   	from 
  			   		prerequisites as P1
  			   	  inner join
  			   	  	prerequisites as P2
  			   	  on P1.prereq_code = P2.course_code)
select * from prereqs2 where course_code = 'SENG 474';


with recursive
  all_prereqs as (select * from prerequisites
  			   union
  			   select P1.course_code, P2.prereq_code
  			   	from 
  			   		all_prereqs as P1
  			   	  inner join
  			   	  	prerequisites as P2
  			   	  on P1.prereq_code = P2.course_code)
select * from all_prereqs where course_code = 'SENG 474';